#include <iostream>
#include <cstdlib> //난수 / 정렬,,,등
#include <cstdio> //입출력(scanf,printf등)
#include <vector>
#include <algorithm>
#include <set>

using namespace std;

void func(int, vector< vector <int> >); 
int numComp; //numComp=100이면;

set<int> s;
set<int> ::iterator itr;

//전역변수로 선언한것은 함수 int func에서 사용하기 위해서임.

int main() {
	int numNet; 
	cin >> numComp >> numNet;

	vector< vector<int> > v; //이중벡터 v 생성
	for (int i = 0; i <= numComp; i++) { //벡터v에 101행(0~100행) 동안 포문 돌면서
		vector<int> elements(numComp + 1); //각 행에 다가 101칸짜리 엘리먼트 벡터를 만들어서 결국 101*101 (0~100) 이중벡터를 만듦
		v.push_back(elements);
	}
	int n1;
	int n2; 

	for (int i = 0; i < numNet; i++) { 
	  	scanf("%d %d", &n1, &n2);
		v[n1][n2] = 1;
		v[n2][n1] = 1;
	}

 
	func(1, v); //1과 연결된 모든 컴퓨터 번호를 set s에 넣는 함수
  
	//set s 출력(반복자로)
	//for (itr = s.begin(); itr != s.end(); itr++) {
	//	cout << *itr << " " << endl;
	//}
	if (s.count(1) == 1) cout << s.size() - 1;
	else  cout << s.size();

	return 0;
}

void func(int num, vector< vector<int> > v) {
	for (int k = 0; k <= numComp; k++) {
		if (v[num][k] == 1 && s.count(k)==0) { //s.find는 반복자를 반환한다고 해서 쉽게 개수를 반환하는 count를 사용 - 이미 set에 있으면 func를 호출하지 않아도 되므로 확인함
			s.insert(k);
			func(k, v); //func(2,v)와 func(5,v)가 호출
		}
	}
}

